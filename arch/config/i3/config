# ------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------

# Mod1 (Alt)
set $mod Mod1

# Locker
set $locker betterlockscreen
set $locker_options -l dim

# Background
set $path_to_background /usr/share/backgrounds
set $background minimalism.png

# Scripts
set $path_to_scripts ~/dotfiles/arch/scripts

# i3-resurrect (Workspace layout saver/restorer)
set $i3_resurrect i3-resurrect

# ------------------------------------------------------------------------
# Appearance
# ------------------------------------------------------------------------

# Border
# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 5

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #eecc6c   #1a1a1a
client.focused_inactive #333333 #5f676a #ffffff #1a1a1a   #1a1a1a
client.unfocused        #333333 #222222 #888888 #1a1a1a   #1a1a1a
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

# client.background       #ffffff

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono, FontAwesome 9

# Bar
set $transparent #00000000
set $dmenu_colour #222222
bar {
        mode hide
        modifier None
        position top
        i3bar_command i3bar -t
        status_command i3status
        colors {
        background $transparent
        statusline #ffffff
        separator #4b5262

        # colour of border, background, and text
        focused_workspace       #2f343f #bf616a #d8dee8
        active_workspace        #2f343f #2f343f #d8dee8
        inactive_workspace      #2f343f #2f343f #d8dee8
        urgent_workspace        #2f343f #ebcb8b #2f343f
    }
}

bindsym $mod+b bar mode toggle

# ------------------------------------------------------------------------
# Autostart
# ------------------------------------------------------------------------
# exec only executes command when i3 is started
# exec_always executed the command each time i3 is reloaded

# Remap caps-lock to Ctrl+Escape
exec --no-startup-id setxkbmap -option 'caps:ctrl_modifier'
exec --no-startup-id xcape -t 200ms -e 'Caps_Lock=Escape'

# Start up workspaces automatically
exec --no-startup-id $path_to_scripts/i3layout.sh
assign [class="^Microsoft Teams - Preview$"] 9

# Compositor (Picom)
# exec_always --no-startup-id picom --config ~/.config/picom.conf

# Flameshot (Print screen)
exec --no-startup-id flameshot &

# Autotiling
exec_always --no-startup-id autotiling &

# Start unclutter (hide mouse cursor)
exec --no-startup-id unclutter &

# Wallpaper
exec_always --no-startup-id feh --no-fehbg --bg-scale $path_to_background/$background &

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
#
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock $locker $locker_options

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# ------------------------------------------------------------------------
# Controls
# ------------------------------------------------------------------------

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec "amixer -q sset Master,0 1+ unmute"
bindsym XF86AudioLowerVolume exec "amixer -q sset Master,0 1- unmute"
bindsym XF86AudioMute exec "amixer -q sset Master,0 toggle"

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Shift+Return exec --no-startup-id "$TERMINAL -e tmux attach-session"

# kill focused window
bindsym $mod+q kill

# Edit in nvim anywhere
# DOESN'T WORK IN ALACRITTY
# WORKS IN XFCE4-TERMINAL IF WITH --disable-server
bindsym $mod+o exec --no-startup-id $path_to_scripts/editInVim.sh

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# ------------------------------------------------------------------------
# Modes
# ------------------------------------------------------------------------

# Save workspace mode.
set $mode_save Save workspace X (X = {1, 2, ..., 10})
mode "$mode_save" {
  bindsym 1 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 1 --swallow=class,instance,title"
  bindsym 2 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 2 --swallow=class,instance,title"
  bindsym 3 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 3 --swallow=class,instance,title"
  bindsym 4 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 4 --swallow=class,instance,title"
  bindsym 5 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 5 --swallow=class,instance,title"
  bindsym 6 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 6 --swallow=class,instance,title"
  bindsym 7 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 7 --swallow=class,instance,title"
  bindsym 8 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 8 --swallow=class,instance,title"
  bindsym 9 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 9 --swallow=class,instance,title"
  bindsym 0 exec "$i3_resurrect save -d ~/dotfiles/workspaces -w 10 --swallow=class,instance,title"

  # Back to normal: Enter, Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+s mode "$mode_save"

# Restore workspace mode.
set $mode_restore Restore workspace X (X = {1, 2, .., 10}, Shift+X to restore only layout)
mode "$mode_restore" {
  bindsym 1 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 1 --programs-only"
  bindsym 2 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 2 --programs-only"
  bindsym 3 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 3 --programs-only"
  bindsym 4 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 4 --programs-only"
  bindsym 5 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 5 --programs-only"
  bindsym 6 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 6 --programs-only"
  bindsym 7 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 7 --programs-only"
  bindsym 8 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 8 --programs-only"
  bindsym 9 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 9 --programs-only"
  bindsym 0 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 10 --programs-only"

  bindsym Shift+1 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 1 --layout-only"
  bindsym Shift+2 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 2 --layout-only"
  bindsym Shift+3 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 3 --layout-only"
  bindsym Shift+4 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 4 --layout-only"
  bindsym Shift+5 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 5 --layout-only"
  bindsym Shift+6 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 6 --layout-only"
  bindsym Shift+7 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 7 --layout-only"
  bindsym Shift+8 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 8 --layout-only"
  bindsym Shift+9 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 9 --layout-only"
  bindsym Shift+0 exec "$i3_resurrect restore -d ~/dotfiles/workspaces -w 10 --layout-only"

  # Back to normal: Enter, Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+n mode "$mode_restore"

# Resize window (you can also use the mouse for that)
set $mode_resize Resize: (H) Shrink width, (L) Grow width, (J) Grow height, (K) Shrink height
mode "$mode_resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "$mode_resize"

# Computer power
set $mode_system (L)ock, Log (O)ut, (S)uspend, (H)ibernate, (R)eboot, (P)ower Off
mode "$mode_system" {
    bindsym l exec --no-startup-id $locker $locker_options, mode "default"
    bindsym o exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $locker $locker_options && sleep 1 && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $locker $locker_options && sleep 1 && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym p exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+q mode "$mode_system"

# Screenshotting
set $mode_screenshot (P)artial, (S)creen, (D)esktop
set $screenshots ~/Pictures
mode "$mode_screenshot" {
    # Capture a portion of the screen
    bindsym p mode "default"; exec flameshot gui
    # Capture current screen
    bindsym s mode "default"; exec flameshot screen -p $screenshots
    # Capture entire desktop
    bindsym d mode "default"; exec flameshot full -p $screenshots

    # Return to normal mode
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym Print mode "$mode_screenshot"

# Dmenu
set $mode_dmenu (G)oogle, (B)ookmarks, (A)pplications
mode "$mode_dmenu" {
    # Search Google
    bindsym g mode "default"; exec --no-startup-id $path_to_scripts/dmenu_search.sh
    # Capture entire desktop
    bindsym b mode "default"; exec --no-startup-id $path_to_scripts/dmenu_bookmarks.sh
    # Search for applications
    bindsym a mode "default"; exec --no-startup-id i3-dmenu-desktop
    
    # Return to normal mode
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym $mod+d mode "$mode_dmenu"

# Gaps
gaps inner 10
smart_gaps on
smart_borders on

set $mode_gaps Toggle gaps: (1) on (2) off
mode "$mode_gaps" {
    # On
    bindsym 1 mode "default", gaps inner all set 10
    # Off
    bindsym 2 mode "default", gaps inner all set 0, gaps outer all set 0

    # Return to normal mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+g mode "$mode_gaps"

# Mouse movement
set $mode_mouse Mouse
mode "$mode_mouse" {
    # Movement
    bindsym h exec "xdotool mousemove_relative -- -20 0"
    bindsym l exec "xdotool mousemove_relative 20 0"
    bindsym k exec "xdotool mousemove_relative 0 -20"
    bindsym j exec "xdotool mousemove_relative -- 0 20"

    # Movement - bigger steps
    bindsym shift+h exec "xdotool mousemove_relative -- -100 0"
    bindsym shift+l exec "xdotool mousemove_relative 100 0"
    bindsym shift+k exec "xdotool mousemove_relative 0 -100"
    bindsym shift+j exec "xdotool mousemove_relative -- 0 100"

    # Movement - smaller steps
    bindsym ctrl+h exec "xdotool mousemove_relative -- -2 0"
    bindsym ctrl+l exec "xdotool mousemove_relative 2 0"
    bindsym ctrl+k exec "xdotool mousemove_relative 0 -2"
    bindsym ctrl+j exec "xdotool mousemove_relative -- 0 2"

    # Click: left mid right
    bindsym u exec "xdotool click 1"
    bindsym i exec "xdotool click 2"
    bindsym o exec "xdotool click 3"

    # Return to normal mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+m mode "$mode_mouse"


#######################################################################
# automatically start i3-config-wizard to offer the user to create a
# keysym-based config which used their favorite modifier (alt or windows)
#
# i3-config-wizard will not launch if there already is a config file
# in ~/.config/i3/config (or $XDG_CONFIG_HOME/i3/config if set) or
# ~/.i3/config.
#
# Please remove the following exec line:
#######################################################################
exec i3-config-wizard
